[
  {
    "id": "436473515",
    "desc": "So what I thought was a data issue was in fact on the front end.\r\n\r\nI also put my linter on it and it changed a lot. \r\n\r\nIn short:\r\n\r\n* Made the label width assumed to be bigger:\r\n``` js\r\nconst labelWidth = 130 // this is almost arbitrary\r\n```\r\n* Gave the containerWidth a default size of 90% of the window\r\n\r\n``` js\r\nwaveContainerWidth: window.innerWidth * 0.9\r\n```\r\n\r\nthis is because before the component shows, the clientWidth is 0. Also, adding resize event listener to that component doesn't get triggered when it shows. Therefore I struggled somewhat to make it so that the containerWidth was not 0 (as when it is, no labels show). I actually thought I could use a callback after the child component called DidMount, but a las it calls that and still has clientWidth 0 when not shown :/\r\n\r\n* renamed textInput to waveFilterComponent as textInput doesn't mean anything in this context.",
    "descHtml": "",
    "title": "Fixed client width being zero before the wave component is drawn",
    "subtitle": "Intellection/fluid.framework",
    "url": "https://api.github.com/repos/Intellection/fluid.framework/issues/2934",
    "state": ""
  },
  {
    "id": "435971752",
    "desc": "It may change quite a lot of things if the functionality is being used, but it changes it correctly. \r\n\r\nAt the moment stimulus.pluralize =\u003e stimulus which is incorrect.\r\n\r\nThis fixes that\r\n\r\nhttps://zigroup.atlassian.net/browse/DS-592\r\n\r\nResults in:\r\n\r\n``` ruby\r\n[5] pry(main)\u003e \"stimulus\".pluralize\r\n=\u003e \"stimuli\"\r\n```",
    "descHtml": "",
    "title": "Stimuli is the plural of stimulus, and now rails knows it too",
    "subtitle": "Intellection/zappi.client",
    "url": "https://api.github.com/repos/Intellection/zappi.client/issues/9619",
    "state": "APPROVED"
  },
  {
    "id": "435663481",
    "desc": "Currently the query parameters become malformed on usage:\r\n\r\n``` go\r\nu, x, err := client.Issue.Search(\"assignee = currentUser() AND resolution = Unresolved order by updated DESC\", \u0026jira.SearchOptions{Expand: \"renderedFields\"})\r\n```\r\n\r\nyields:\r\n\r\n``` bash\r\njql=assignee+%3D+currentUser%28%29+AND+resolution+%3D+Unresolved+order+by+updated+DESC\u0026startAt=0\u0026maxResults=0\u0026expand=renderedFields\u0026fields=\u0026validateQuery=\r\n```\r\n\r\nwhich does not return any data.\r\n\r\nThis is an example fix that avoids appending those query parameters when they are empty. I couldn't find a neat way of doing that without turning all struct types to pointers. \r\n\r\nIt breaks the spec here https://github.com/andygrunwald/go-jira/blob/master/issue_test.go#L607\r\n\r\nbecause it now won't pass empty parameters in. This fixes my use case, but the current implementation is a little gross.\r\n\r\n",
    "descHtml": "",
    "title": "Stopped adding empty params to url",
    "subtitle": "andygrunwald/go-jira",
    "url": "https://api.github.com/repos/andygrunwald/go-jira/issues/206",
    "state": ""
  },
  {
    "id": "434556327",
    "desc": "…rrelation page",
    "descHtml": "",
    "title": "Enabled the support for array of arrays to be passed into the tags co…",
    "subtitle": "Intellection/stats_apps.engine",
    "url": "https://api.github.com/repos/Intellection/stats_apps.engine/issues/289",
    "state": "APPROVED"
  },
  {
    "id": "434556051",
    "desc": "…nt them looked uop",
    "descHtml": "",
    "title": "Supporting the new stats apps UI by passing in labels if you don't wa…",
    "subtitle": "Intellection/zappi.client",
    "url": "https://api.github.com/repos/Intellection/zappi.client/issues/9607",
    "state": "APPROVED"
  },
  {
    "id": "430771791",
    "desc": "https://zigroup.atlassian.net/secure/RapidBoard.jspa?rapidView=296\u0026modal=detail\u0026selectedIssue=ADPULSE-141",
    "descHtml": "",
    "title": "Added waves",
    "subtitle": "Intellection/zappi.client",
    "url": "https://api.github.com/repos/Intellection/zappi.client/issues/9554",
    "state": "APPROVED"
  }
]
