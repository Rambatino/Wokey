// Code generated by MockGen. DO NOT EDIT.
// Source: database/jira.go

// Package database is a generated GoMock package.
package database

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockJiraQuerier is a mock of JiraQuerier interface
type MockJiraQuerier struct {
	ctrl     *gomock.Controller
	recorder *MockJiraQuerierMockRecorder
}

// MockJiraQuerierMockRecorder is the mock recorder for MockJiraQuerier
type MockJiraQuerierMockRecorder struct {
	mock *MockJiraQuerier
}

// NewMockJiraQuerier creates a new mock instance
func NewMockJiraQuerier(ctrl *gomock.Controller) *MockJiraQuerier {
	mock := &MockJiraQuerier{ctrl: ctrl}
	mock.recorder = &MockJiraQuerierMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockJiraQuerier) EXPECT() *MockJiraQuerierMockRecorder {
	return m.recorder
}

// getJiraIssues mocks base method
func (m *MockJiraQuerier) getJiraIssues() []issue {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "getJiraIssues")
	ret0, _ := ret[0].([]issue)
	return ret0
}

// getJiraIssues indicates an expected call of getJiraIssues
func (mr *MockJiraQuerierMockRecorder) getJiraIssues() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "getJiraIssues", reflect.TypeOf((*MockJiraQuerier)(nil).getJiraIssues))
}
